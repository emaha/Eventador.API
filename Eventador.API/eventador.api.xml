<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Eventador.API</name>
    </assembly>
    <members>
        <member name="T:Eventador.API.Controllers.EventController">
            <summary>
            Контроллер событий
            </summary>
        </member>
        <member name="M:Eventador.API.Controllers.EventController.#ctor(Eventador.Services.Contract.IEventService)">
            <summary>
            ctor
            </summary>
            <param name="eventService"></param>
        </member>
        <member name="M:Eventador.API.Controllers.EventController.GetById(System.Int32)">
            <summary>
            Получить по id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Eventador.API.Controllers.EventController.GetEvents">
            <summary>
            Получить события в регионе
            </summary>
            <returns></returns>
        </member>
        <member name="M:Eventador.API.Controllers.EventController.CreateEvent(Eventador.Domain.Requests.EventCreateRequest)">
            <summary>
            Создание события
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Eventador.API.Controllers.EventController.UpdateEvent(Eventador.Domain.Requests.EventUpdateRequest)">
            <summary>
            Изменение события
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Eventador.API.Controllers.EventController.FinishEvent(System.Int32)">
            <summary>
            Завершение события
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Eventador.API.Controllers.FeedBackCpontroller">
             <summary>
            
             </summary>
        </member>
        <member name="M:Eventador.API.Controllers.FeedBackCpontroller.RateEvent(Eventador.Domain.Requests.RateEventCreateRequest)">
            <summary>
            Оценить событие
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:Eventador.API.Controllers.UserController">
             <summary>
            
             </summary>
        </member>
        <member name="M:Eventador.API.Controllers.UserController.Get">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Eventador.API.Controllers.UserController.Create">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Eventador.API.Controllers.UserController.Update">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Eventador.API.Controllers.UserController.Block">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Eventador.API.Controllers.UserController.Unblock">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:Eventador.API.Middlewares.TokenAuthenticationMiddleware">
            <summary>
            Middleware для аутентификации через токен
            </summary>
        </member>
        <member name="M:Eventador.API.Middlewares.TokenAuthenticationMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:Eventador.API.Middlewares.TokenAuthenticationMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            InvokeAsync
            </summary>
        </member>
        <member name="T:Eventador.API.Models.EventModel">
            <summary>
            Упрощенная модель события
            </summary>
        </member>
        <member name="P:Eventador.API.Models.EventModel.Title">
            <summary>
            Заголовок
            </summary>
        </member>
        <member name="M:Eventador.API.Models.EventModel.Create(Eventador.Domain.Event)">
             <summary>
            
             </summary>
             <param name="evnt"></param>
             <returns></returns>
        </member>
        <member name="T:Eventador.API.Models.SmallEventModel">
            <summary>
            Упрощенная модель события
            </summary>
        </member>
        <member name="P:Eventador.API.Models.SmallEventModel.Id">
             <summary>
            
             </summary>
        </member>
        <member name="P:Eventador.API.Models.SmallEventModel.Title">
            <summary>
            Заголовок
            </summary>
        </member>
        <member name="M:Eventador.API.Models.SmallEventModel.Create(Eventador.Domain.Event)">
             <summary>
            
             </summary>
             <param name="evnt"></param>
             <returns></returns>
        </member>
        <member name="T:Eventador.API.Program">
             <summary>
            
             </summary>
        </member>
        <member name="M:Eventador.API.Program.Main(System.String[])">
             <summary>
            
             </summary>
             <param name="args"></param>
        </member>
        <member name="M:Eventador.API.Program.BuildWebHost(System.String[])">
             <summary>
            
             </summary>
             <param name="args"></param>
             <returns></returns>
        </member>
        <member name="T:Eventador.API.Startup">
             <summary>
            
             </summary>
        </member>
        <member name="M:Eventador.API.Startup.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
             <summary>
            
             </summary>
             <param name="env"></param>
        </member>
        <member name="P:Eventador.API.Startup.Environment">
            <summary>
            Environment
            </summary>
        </member>
        <member name="P:Eventador.API.Startup.Configuration">
            <summary>
            Конфигурация приложения
            </summary>
        </member>
        <member name="M:Eventador.API.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
             <summary>
            
             </summary>
             <param name="services"></param>
        </member>
        <member name="M:Eventador.API.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
             <summary>
            
             </summary>
             <param name="app"></param>
             <param name="env"></param>
        </member>
        <member name="M:Eventador.API.Startup.GetRetryPolicy">
            <summary>
            Базовая политика повторов с колебанием задержки
            <remarks>Политики, заданные с помощью этого метода расширения, обрабатывают HttpRequestException,
            ответы HTTP 5xx и ответы HTTP 408</remarks>
            </summary>
        </member>
        <member name="M:Eventador.API.Startup.RegisterHealthChecks(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Регистрация сервиса мониторинга работоспособности
            </summary>
            <param name="services"></param>
        </member>
    </members>
</doc>
